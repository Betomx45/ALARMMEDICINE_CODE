import * as React from 'react';
import { Button, Container, Chip, Alert,Grid, TextField, Typography } from "@mui/material";
import Box from '@mui/material/Box';
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from 'react';
import { useForm } from 'react-hook-form';
import { getProviders, getSession, signIn } from 'next-auth/react';
import { useRouter } from 'next/router';
import { ErrorOutline } from '@mui/icons-material';

    const  Login = () => {
    const router = useRouter();
    const { query } = useRouter()
    const { register, handleSubmit, formState: { errors } } = useForm();
    const [ showError, setShowError ] = useState(false);
    const [providers, setProviders] = useState({});
  
    useEffect(() => {
      getProviders().then( prov => {
        setProviders(prov)
      });
    
      if (router.query.error && router.query.error === 'CredentialsSignin') {
        setShowError(true);
      }
    });
  
    const onLoginUser = async( { email, password }) => {
  
      setShowError(false);

      await signIn('credentials',{ email, password });
    }

    return (
        <>
          <Head>
            <title>Login</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

            <Container>
    
                <Grid item xs={12} md={8} >
                  <Typography variant="h4"mt={6} sx={{textAlign: 'center', fontWeight: "bold", }}>
                      ¡Bienvenido!
                  </Typography>
                </Grid>
                <Box component="form" onSubmit={ handleSubmit(onLoginUser) } noValidate>
                    <Grid container spacing={4} sx={{display: 'flex', justifyContent: 'center', marginBottom: 4}}>
                        <Grid item xs={12} md={8} sx={{ my: 3}}>
                            <Chip 
                                label="La credencial ingresada es incorrecta."
                                color="error"
                                icon={ <ErrorOutline /> }
                                className="fadeIn"
                                sx={{ display: showError ? 'flex': 'none' }}
                            />
                            {(query.error && query.error !== 'CredentialsSignin')&& (
                              <Alert severity="error">{query.error}</Alert>
                            )}
                          <Typography color="primary" variant="h5" mt={6}  sx={{fontWeight: "bold"}}>
                              Correo electrónico
                          </Typography>
                          <TextField
                            variant="standard"
                            id="input-with-icon-textfield"
                            fullWidth
                            required
                            autoFocus
                            { ...register('email', {
                              required: 'Este campo es requerido',
                            })}
                            error={ !!errors.email}
                            helperText={ errors.email?.message }
                          />
                          
                        </Grid>
                        <Grid item xs={12} md={8}>
                        <Typography color="primary" variant="h5" sx={{fontWeight: "bold"}}>
                            Contraseña
                        </Typography>
                        <TextField 
                            variant="standard"
                            type="password"
                            fullWidth
                            { ...register('password', {
                              required: 'Este campo es requerido',
                            })}
                            error={ !!errors.password }
                            helperText={ errors.password?.message }
                        />
                        </Grid>
                    </Grid>
                    <Grid item xs={12}>
                      <Button 
                        fullWidth 
                        sx={{fontSize: "20px"}} 
                        type="submit" 
                        variant="contained"
                        disabled={Object.keys(errors).length > 0}
                        >
                          Ingresar
                      </Button>
                        <Typography variant="h6" mt={4} sx={{textAlign: 'center', fontWeight: "bold"}}>
                            ¿Olvidaste tu contraseña? <Link style={{textDecoration: 'underline', color: '#1976d2'}} href="restore">Ingresa aquí</Link>
                        </Typography>
                    </Grid>
                </Box>
               
            </Container>
        </>
    );
};

// si logra ser autenticado, regresarlo a la página que intentó acceder
export const getServerSideProps = async ({ req, query }) => {
    const session = await getSession({ req });
  
    const { p = '/' } = query;

    if ( session ) {
      return {
        redirect: {
          destination: p.toString(),
          permanent: false
        }
      }
    }
  
    return {
      props: { }
    }
  }

  export default Login;